"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const plugin_jsx_1 = __importDefault(require("@svgr/plugin-jsx"));
const crypto_1 = __importDefault(require("crypto"));
const mini_svg_data_uri_1 = __importDefault(require("mini-svg-data-uri"));
const typescript_1 = __importDefault(require("typescript"));
function getCacheKey(fileData, filePath, configString) {
    return crypto_1.default
        .createHash('md5')
        .update(fileData)
        .update(configString)
        .digest('hex');
}
function processFunction(sourceText) {
    const svgCode = sourceText.replace(/[\r\n]+/gm, '');
    const componentName = 'ReactComponent';
    const reactCode = plugin_jsx_1.default(svgCode, {}, { componentName });
    const lines = reactCode.split('\n');
    const output = process.env.TS_SVG_EXPORT === 'default'
        ? [
            ...lines.slice(0, lines.length - 1),
            `export default ${componentName}`,
        ].join('\n')
        : [
            ...lines.slice(0, lines.length - 1),
            `export default \`${mini_svg_data_uri_1.default(svgCode)}\`;`,
            `export {${componentName}};`,
        ].join('\n');
    return typescript_1.default.transpileModule(output, {
        compilerOptions: { module: typescript_1.default.ModuleKind.CommonJS, jsx: typescript_1.default.JsxEmit.React },
    }).outputText;
}
module.exports = {
    getCacheKey,
    process: processFunction,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ZnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL0Bzc2VuL2plc3QtdHJhbnNmb3JtL3RyYW5zZm9ybS9zdmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGtFQUF3QztBQUN4QyxvREFBNEM7QUFDNUMsMEVBQWlEO0FBQ2pELDREQUE0QjtBQUU1QixTQUFTLFdBQVcsQ0FDbEIsUUFBb0IsRUFDcEIsUUFBZ0IsRUFDaEIsWUFBb0I7SUFFcEIsT0FBTyxnQkFBTTtTQUNWLFVBQVUsQ0FBQyxLQUFLLENBQUM7U0FDakIsTUFBTSxDQUFDLFFBQVEsQ0FBQztTQUNoQixNQUFNLENBQUMsWUFBWSxDQUFDO1NBQ3BCLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNuQixDQUFDO0FBRUQsU0FBUyxlQUFlLENBQUMsVUFBa0I7SUFDekMsTUFBTSxPQUFPLEdBQVcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDNUQsTUFBTSxhQUFhLEdBQVcsZ0JBQWdCLENBQUM7SUFDL0MsTUFBTSxTQUFTLEdBQVcsb0JBQVEsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQztJQUVuRSxNQUFNLEtBQUssR0FBYSxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTlDLE1BQU0sTUFBTSxHQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxLQUFLLFNBQVM7UUFDckMsQ0FBQyxDQUFDO1lBQ0UsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztZQUNuQyxrQkFBa0IsYUFBYSxFQUFFO1NBQ2xDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLENBQUMsQ0FBQztZQUNFLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFDbkMsb0JBQW9CLDJCQUFnQixDQUFDLE9BQU8sQ0FBQyxLQUFLO1lBQ2xELFdBQVcsYUFBYSxJQUFJO1NBQzdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRW5CLE9BQU8sb0JBQUUsQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFO1FBQ2hDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxvQkFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLG9CQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRTtLQUMzRSxDQUFDLENBQUMsVUFBVSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxpQkFBUztJQUNQLFdBQVc7SUFDWCxPQUFPLEVBQUUsZUFBZTtDQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN2Z1RvSnN4IGZyb20gJ0BzdmdyL3BsdWdpbi1qc3gnO1xuaW1wb3J0IGNyeXB0bywgeyBCaW5hcnlMaWtlIH0gZnJvbSAnY3J5cHRvJztcbmltcG9ydCBzdmdUb01pbmlEYXRhVVJJIGZyb20gJ21pbmktc3ZnLWRhdGEtdXJpJztcbmltcG9ydCB0cyBmcm9tICd0eXBlc2NyaXB0JztcblxuZnVuY3Rpb24gZ2V0Q2FjaGVLZXkoXG4gIGZpbGVEYXRhOiBCaW5hcnlMaWtlLFxuICBmaWxlUGF0aDogc3RyaW5nLFxuICBjb25maWdTdHJpbmc6IHN0cmluZyxcbik6IHN0cmluZyB7XG4gIHJldHVybiBjcnlwdG9cbiAgICAuY3JlYXRlSGFzaCgnbWQ1JylcbiAgICAudXBkYXRlKGZpbGVEYXRhKVxuICAgIC51cGRhdGUoY29uZmlnU3RyaW5nKVxuICAgIC5kaWdlc3QoJ2hleCcpO1xufVxuXG5mdW5jdGlvbiBwcm9jZXNzRnVuY3Rpb24oc291cmNlVGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc3Qgc3ZnQ29kZTogc3RyaW5nID0gc291cmNlVGV4dC5yZXBsYWNlKC9bXFxyXFxuXSsvZ20sICcnKTtcbiAgY29uc3QgY29tcG9uZW50TmFtZTogc3RyaW5nID0gJ1JlYWN0Q29tcG9uZW50JztcbiAgY29uc3QgcmVhY3RDb2RlOiBzdHJpbmcgPSBzdmdUb0pzeChzdmdDb2RlLCB7fSwgeyBjb21wb25lbnROYW1lIH0pO1xuXG4gIGNvbnN0IGxpbmVzOiBzdHJpbmdbXSA9IHJlYWN0Q29kZS5zcGxpdCgnXFxuJyk7XG5cbiAgY29uc3Qgb3V0cHV0OiBzdHJpbmcgPVxuICAgIHByb2Nlc3MuZW52LlRTX1NWR19FWFBPUlQgPT09ICdkZWZhdWx0J1xuICAgICAgPyBbXG4gICAgICAgICAgLi4ubGluZXMuc2xpY2UoMCwgbGluZXMubGVuZ3RoIC0gMSksXG4gICAgICAgICAgYGV4cG9ydCBkZWZhdWx0ICR7Y29tcG9uZW50TmFtZX1gLFxuICAgICAgICBdLmpvaW4oJ1xcbicpXG4gICAgICA6IFtcbiAgICAgICAgICAuLi5saW5lcy5zbGljZSgwLCBsaW5lcy5sZW5ndGggLSAxKSxcbiAgICAgICAgICBgZXhwb3J0IGRlZmF1bHQgXFxgJHtzdmdUb01pbmlEYXRhVVJJKHN2Z0NvZGUpfVxcYDtgLFxuICAgICAgICAgIGBleHBvcnQgeyR7Y29tcG9uZW50TmFtZX19O2AsXG4gICAgICAgIF0uam9pbignXFxuJyk7XG5cbiAgcmV0dXJuIHRzLnRyYW5zcGlsZU1vZHVsZShvdXRwdXQsIHtcbiAgICBjb21waWxlck9wdGlvbnM6IHsgbW9kdWxlOiB0cy5Nb2R1bGVLaW5kLkNvbW1vbkpTLCBqc3g6IHRzLkpzeEVtaXQuUmVhY3QgfSxcbiAgfSkub3V0cHV0VGV4dDtcbn1cblxuZXhwb3J0ID0ge1xuICBnZXRDYWNoZUtleSxcbiAgcHJvY2VzczogcHJvY2Vzc0Z1bmN0aW9uLFxufTtcbiJdfQ==