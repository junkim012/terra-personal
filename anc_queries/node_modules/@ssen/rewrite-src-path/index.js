import path from 'path';
function toPackageName(fullPath) {
    const p = fullPath.replace(/\\/g, '/');
    if (/^@/.test(p)) {
        return p.split('/').splice(0, 2).join('/');
    }
    else {
        return p.split('/')[0];
    }
}
export function rewriteSrcPath({ importPath, filePath, rootDir }) {
    if (/^\.\./.test(importPath)) {
        const dir = path.dirname(filePath);
        const targetFilePath = path.join(dir, importPath);
        const packageName = toPackageName(path.relative(rootDir, filePath));
        const targetPackageName = toPackageName(path.relative(rootDir, targetFilePath));
        return packageName !== targetPackageName ? targetPackageName : importPath;
    }
    return importPath;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvQHNzZW4vcmV3cml0ZS1zcmMtcGF0aC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFheEIsU0FBUyxhQUFhLENBQUMsUUFBZ0I7SUFDckMsTUFBTSxDQUFDLEdBQVcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0MsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ2hCLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUM1QztTQUFNO1FBQ0wsT0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBVTtJQUN0RSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7UUFDNUIsTUFBTSxHQUFHLEdBQVcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzQyxNQUFNLGNBQWMsR0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMxRCxNQUFNLFdBQVcsR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUM1RSxNQUFNLGlCQUFpQixHQUFXLGFBQWEsQ0FDN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQ3ZDLENBQUM7UUFFRixPQUFPLFdBQVcsS0FBSyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQztLQUMzRTtJQUVELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuaW50ZXJmYWNlIFBhcmFtcyB7XG4gIC8qKiBpbXBvcnQgJy4uYScgKi9cbiAgaW1wb3J0UGF0aDogc3RyaW5nO1xuXG4gIC8qKiBhYnNvbHV0ZSBmaWxlIHBhdGggKi9cbiAgZmlsZVBhdGg6IHN0cmluZztcblxuICAvKiogYWJzb2x1dGUgc3JjIGRpcmVjdG9yeSBwYXRoICovXG4gIHJvb3REaXI6IHN0cmluZztcbn1cblxuZnVuY3Rpb24gdG9QYWNrYWdlTmFtZShmdWxsUGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc3QgcDogc3RyaW5nID0gZnVsbFBhdGgucmVwbGFjZSgvXFxcXC9nLCAnLycpO1xuICBpZiAoL15ALy50ZXN0KHApKSB7XG4gICAgcmV0dXJuIHAuc3BsaXQoJy8nKS5zcGxpY2UoMCwgMikuam9pbignLycpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwLnNwbGl0KCcvJylbMF07XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJld3JpdGVTcmNQYXRoKHsgaW1wb3J0UGF0aCwgZmlsZVBhdGgsIHJvb3REaXIgfTogUGFyYW1zKSB7XG4gIGlmICgvXlxcLlxcLi8udGVzdChpbXBvcnRQYXRoKSkge1xuICAgIGNvbnN0IGRpcjogc3RyaW5nID0gcGF0aC5kaXJuYW1lKGZpbGVQYXRoKTtcbiAgICBjb25zdCB0YXJnZXRGaWxlUGF0aDogc3RyaW5nID0gcGF0aC5qb2luKGRpciwgaW1wb3J0UGF0aCk7XG4gICAgY29uc3QgcGFja2FnZU5hbWU6IHN0cmluZyA9IHRvUGFja2FnZU5hbWUocGF0aC5yZWxhdGl2ZShyb290RGlyLCBmaWxlUGF0aCkpO1xuICAgIGNvbnN0IHRhcmdldFBhY2thZ2VOYW1lOiBzdHJpbmcgPSB0b1BhY2thZ2VOYW1lKFxuICAgICAgcGF0aC5yZWxhdGl2ZShyb290RGlyLCB0YXJnZXRGaWxlUGF0aCksXG4gICAgKTtcblxuICAgIHJldHVybiBwYWNrYWdlTmFtZSAhPT0gdGFyZ2V0UGFja2FnZU5hbWUgPyB0YXJnZXRQYWNrYWdlTmFtZSA6IGltcG9ydFBhdGg7XG4gIH1cblxuICByZXR1cm4gaW1wb3J0UGF0aDtcbn1cbiJdfQ==