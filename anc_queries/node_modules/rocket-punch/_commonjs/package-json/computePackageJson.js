"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computePackageJson = void 0;
async function computePackageJson({ packageInfo, dependencies, sharedConfig = {}, }) {
    const shared = { ...sharedConfig };
    const keys = Object.keys(shared);
    keys.forEach((key) => {
        const value = shared[key];
        if (typeof value === 'string') {
            //@ts-ignore
            shared[key] = value
                .replace(/({name})/g, packageInfo.name) // {name}
                .replace(/({version})/g, packageInfo.version); // {version}
        }
    });
    const computedConfig = {
        ...shared,
        //main: 'index.js',
        typings: 'index.d.ts',
        ...packageInfo.packageJson,
        name: packageInfo.name,
        version: packageInfo.version,
        dependencies: dependencies,
    };
    const commonjsDirectory = packageInfo.exports.main === 'commonjs' ? '.' : './_commonjs';
    computedConfig.main = `${commonjsDirectory}/index.js`;
    if (packageInfo.exports.module) {
        const moduleDirectory = packageInfo.exports.main === 'module' ? '.' : './_module';
        computedConfig.module = `${moduleDirectory}/index.js`;
    }
    return computedConfig;
}
exports.computePackageJson = computePackageJson;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZVBhY2thZ2VKc29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvY2tldC1wdW5jaC9wYWNrYWdlLWpzb24vY29tcHV0ZVBhY2thZ2VKc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVNPLEtBQUssVUFBVSxrQkFBa0IsQ0FBQyxFQUN2QyxXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksR0FBRyxFQUFFLEdBQ1Y7SUFDUCxNQUFNLE1BQU0sR0FBZ0IsRUFBRSxHQUFHLFlBQVksRUFBRSxDQUFDO0lBQ2hELE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUEwQixDQUFDO0lBRTFELElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtRQUNuQixNQUFNLEtBQUssR0FBWSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkMsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDN0IsWUFBWTtZQUNaLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLO2lCQUNoQixPQUFPLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTO2lCQUNoRCxPQUFPLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFlBQVk7U0FDOUQ7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sY0FBYyxHQUFnQjtRQUNsQyxHQUFHLE1BQU07UUFFVCxtQkFBbUI7UUFDbkIsT0FBTyxFQUFFLFlBQVk7UUFFckIsR0FBRyxXQUFXLENBQUMsV0FBVztRQUUxQixJQUFJLEVBQUUsV0FBVyxDQUFDLElBQUk7UUFDdEIsT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPO1FBQzVCLFlBQVksRUFBRSxZQUFZO0tBQzNCLENBQUM7SUFFRixNQUFNLGlCQUFpQixHQUNyQixXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDO0lBQ2hFLGNBQWMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxpQkFBaUIsV0FBVyxDQUFDO0lBRXRELElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUU7UUFDOUIsTUFBTSxlQUFlLEdBQ25CLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUM7UUFDNUQsY0FBYyxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsV0FBVyxDQUFDO0tBQ3ZEO0lBRUQsT0FBTyxjQUFjLENBQUM7QUFDeEIsQ0FBQztBQTFDRCxnREEwQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWNrYWdlSnNvbiB9IGZyb20gJ3R5cGUtZmVzdCc7XG5pbXBvcnQgeyBQYWNrYWdlSW5mbyB9IGZyb20gJy4uL3R5cGVzJztcblxuaW50ZXJmYWNlIFBhcmFtcyB7XG4gIHBhY2thZ2VJbmZvOiBQYWNrYWdlSW5mbztcbiAgZGVwZW5kZW5jaWVzOiBQYWNrYWdlSnNvbi5EZXBlbmRlbmN5O1xuICBzaGFyZWRDb25maWc/OiBQYWNrYWdlSnNvbjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbXB1dGVQYWNrYWdlSnNvbih7XG4gIHBhY2thZ2VJbmZvLFxuICBkZXBlbmRlbmNpZXMsXG4gIHNoYXJlZENvbmZpZyA9IHt9LFxufTogUGFyYW1zKTogUHJvbWlzZTxQYWNrYWdlSnNvbj4ge1xuICBjb25zdCBzaGFyZWQ6IFBhY2thZ2VKc29uID0geyAuLi5zaGFyZWRDb25maWcgfTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHNoYXJlZCkgYXMgKGtleW9mIFBhY2thZ2VKc29uKVtdO1xuXG4gIGtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgY29uc3QgdmFsdWU6IHVua25vd24gPSBzaGFyZWRba2V5XTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBzaGFyZWRba2V5XSA9IHZhbHVlXG4gICAgICAgIC5yZXBsYWNlKC8oe25hbWV9KS9nLCBwYWNrYWdlSW5mby5uYW1lKSAvLyB7bmFtZX1cbiAgICAgICAgLnJlcGxhY2UoLyh7dmVyc2lvbn0pL2csIHBhY2thZ2VJbmZvLnZlcnNpb24pOyAvLyB7dmVyc2lvbn1cbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGNvbXB1dGVkQ29uZmlnOiBQYWNrYWdlSnNvbiA9IHtcbiAgICAuLi5zaGFyZWQsXG5cbiAgICAvL21haW46ICdpbmRleC5qcycsXG4gICAgdHlwaW5nczogJ2luZGV4LmQudHMnLFxuXG4gICAgLi4ucGFja2FnZUluZm8ucGFja2FnZUpzb24sXG5cbiAgICBuYW1lOiBwYWNrYWdlSW5mby5uYW1lLFxuICAgIHZlcnNpb246IHBhY2thZ2VJbmZvLnZlcnNpb24sXG4gICAgZGVwZW5kZW5jaWVzOiBkZXBlbmRlbmNpZXMsXG4gIH07XG5cbiAgY29uc3QgY29tbW9uanNEaXJlY3RvcnkgPVxuICAgIHBhY2thZ2VJbmZvLmV4cG9ydHMubWFpbiA9PT0gJ2NvbW1vbmpzJyA/ICcuJyA6ICcuL19jb21tb25qcyc7XG4gIGNvbXB1dGVkQ29uZmlnLm1haW4gPSBgJHtjb21tb25qc0RpcmVjdG9yeX0vaW5kZXguanNgO1xuXG4gIGlmIChwYWNrYWdlSW5mby5leHBvcnRzLm1vZHVsZSkge1xuICAgIGNvbnN0IG1vZHVsZURpcmVjdG9yeSA9XG4gICAgICBwYWNrYWdlSW5mby5leHBvcnRzLm1haW4gPT09ICdtb2R1bGUnID8gJy4nIDogJy4vX21vZHVsZSc7XG4gICAgY29tcHV0ZWRDb25maWcubW9kdWxlID0gYCR7bW9kdWxlRGlyZWN0b3J5fS9pbmRleC5qc2A7XG4gIH1cblxuICByZXR1cm4gY29tcHV0ZWRDb25maWc7XG59XG4iXX0=