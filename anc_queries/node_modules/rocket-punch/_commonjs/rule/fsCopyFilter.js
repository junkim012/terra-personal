"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fsCopyFilter = void 0;
const extended_compiler_host_1 = require("@ssen/extended-compiler-host");
const fs_extra_1 = __importDefault(require("fs-extra"));
const bundleExtensions = new RegExp(`.(${extended_compiler_host_1.targetExtensions.join('|')})$`);
// if the file bundled by like `import text from './some.txt'`
// it does not copy
function isBundled(dest) {
    return bundleExtensions.test(dest) && fs_extra_1.default.existsSync(dest + '.js');
}
// prettier-ignore
function fsCopyFilter(src, dest) {
    const s = src.replace(/\\/g, '/');
    const completelyIgnore = /__(\w*)__/.test(s); // __tests__ , __fixtures__
    const ignore = /\.(ts|tsx|mjs|js|jsx)$/.test(s) || // *.ts, *.tsx, *.js, *.jsx, *.mjs
        isBundled(dest); // *.txt, *.md, *.yml...
    const pass = !completelyIgnore &&
        (!ignore ||
            /\.d\.ts$/.test(s) || // *.d.ts
            /\/bin\/[a-zA-Z0-9._-]+.js$/.test(s) || // bin/*.js
            /\/public\//.test(s) // public/*
        );
    //if (pass && !process.env.JEST_WORKER_ID) {
    //if (fs.statSync(s).isFile()) console.log('COPY:', s);
    //}
    return pass;
}
exports.fsCopyFilter = fsCopyFilter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnNDb3B5RmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvY2tldC1wdW5jaC9ydWxlL2ZzQ29weUZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx5RUFBZ0U7QUFDaEUsd0RBQTBCO0FBRTFCLE1BQU0sZ0JBQWdCLEdBQVcsSUFBSSxNQUFNLENBQ3pDLEtBQUsseUNBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQ3BDLENBQUM7QUFFRiw4REFBOEQ7QUFDOUQsbUJBQW1CO0FBQ25CLFNBQVMsU0FBUyxDQUFDLElBQVk7SUFDN0IsT0FBTyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksa0JBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQ3BFLENBQUM7QUFFRCxrQkFBa0I7QUFDbEIsU0FBZ0IsWUFBWSxDQUFDLEdBQVcsRUFBRSxJQUFZO0lBQ3BELE1BQU0sQ0FBQyxHQUFXLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRTFDLE1BQU0sZ0JBQWdCLEdBQ3BCLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBMkIsMkJBQTJCO0lBRTVFLE1BQU0sTUFBTSxHQUNWLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBZSxrQ0FBa0M7UUFDakYsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQStCLHdCQUF3QjtJQUV6RSxNQUFNLElBQUksR0FDUixDQUFDLGdCQUFnQjtRQUNqQixDQUNFLENBQUMsTUFBTTtZQUNQLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQTJCLFNBQVM7WUFDdEQsNEJBQTRCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFTLFdBQVc7WUFDeEQsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBeUIsV0FBVztTQUN6RCxDQUFDO0lBRUosNENBQTRDO0lBQzVDLHVEQUF1RDtJQUN2RCxHQUFHO0lBRUgsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBeEJELG9DQXdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRhcmdldEV4dGVuc2lvbnMgfSBmcm9tICdAc3Nlbi9leHRlbmRlZC1jb21waWxlci1ob3N0JztcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5cbmNvbnN0IGJ1bmRsZUV4dGVuc2lvbnM6IFJlZ0V4cCA9IG5ldyBSZWdFeHAoXG4gIGAuKCR7dGFyZ2V0RXh0ZW5zaW9ucy5qb2luKCd8Jyl9KSRgLFxuKTtcblxuLy8gaWYgdGhlIGZpbGUgYnVuZGxlZCBieSBsaWtlIGBpbXBvcnQgdGV4dCBmcm9tICcuL3NvbWUudHh0J2Bcbi8vIGl0IGRvZXMgbm90IGNvcHlcbmZ1bmN0aW9uIGlzQnVuZGxlZChkZXN0OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIGJ1bmRsZUV4dGVuc2lvbnMudGVzdChkZXN0KSAmJiBmcy5leGlzdHNTeW5jKGRlc3QgKyAnLmpzJyk7XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxuZXhwb3J0IGZ1bmN0aW9uIGZzQ29weUZpbHRlcihzcmM6IHN0cmluZywgZGVzdDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGNvbnN0IHM6IHN0cmluZyA9IHNyYy5yZXBsYWNlKC9cXFxcL2csICcvJyk7XG4gIFxuICBjb25zdCBjb21wbGV0ZWx5SWdub3JlOiBib29sZWFuID1cbiAgICAvX18oXFx3KilfXy8udGVzdChzKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBfX3Rlc3RzX18gLCBfX2ZpeHR1cmVzX19cbiAgXG4gIGNvbnN0IGlnbm9yZTogYm9vbGVhbiA9XG4gICAgL1xcLih0c3x0c3h8bWpzfGpzfGpzeCkkLy50ZXN0KHMpIHx8ICAgICAgICAgICAgLy8gKi50cywgKi50c3gsICouanMsICouanN4LCAqLm1qc1xuICAgIGlzQnVuZGxlZChkZXN0KTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gKi50eHQsICoubWQsICoueW1sLi4uXG4gIFxuICBjb25zdCBwYXNzOiBib29sZWFuID1cbiAgICAhY29tcGxldGVseUlnbm9yZSAmJlxuICAgIChcbiAgICAgICFpZ25vcmUgfHxcbiAgICAgIC9cXC5kXFwudHMkLy50ZXN0KHMpIHx8ICAgICAgICAgICAgICAgICAgICAgICAgLy8gKi5kLnRzXG4gICAgICAvXFwvYmluXFwvW2EtekEtWjAtOS5fLV0rLmpzJC8udGVzdChzKSB8fCAgICAgIC8vIGJpbi8qLmpzXG4gICAgICAvXFwvcHVibGljXFwvLy50ZXN0KHMpICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHB1YmxpYy8qXG4gICAgKTtcbiAgXG4gIC8vaWYgKHBhc3MgJiYgIXByb2Nlc3MuZW52LkpFU1RfV09SS0VSX0lEKSB7XG4gIC8vaWYgKGZzLnN0YXRTeW5jKHMpLmlzRmlsZSgpKSBjb25zb2xlLmxvZygnQ09QWTonLCBzKTtcbiAgLy99XG4gIFxuICByZXR1cm4gcGFzcztcbn1cbiJdfQ==